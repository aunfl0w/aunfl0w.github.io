<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Fpw on Aun&#39;s Blog</title>
    <link>https://aunfl0w.github.io/tags/fpw/</link>
    <description>Recent content in Fpw on Aun&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 11 Nov 2018 12:04:41 -0500</lastBuildDate>
    
	<atom:link href="https://aunfl0w.github.io/tags/fpw/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Growing Frozen Particle Waves</title>
      <link>https://aunfl0w.github.io/2018/freedomtoadd/</link>
      <pubDate>Sun, 11 Nov 2018 12:04:41 -0500</pubDate>
      
      <guid>https://aunfl0w.github.io/2018/freedomtoadd/</guid>
      <description>Growing Frozen Particle Waves I recently added docker support to Frozen Particle Waves. If you are looking for an OSS project where you can contribute to this is a great option. It isn&amp;rsquo;t finished so you have a great base to contribute updates and exhibit your skills.
Some additions and updates that you can help with:  Add a storage system and services to add users and cameras. Separate the UI into a more up to date framework such as Angular.</description>
    </item>
    
    <item>
      <title>Process Slaughterhouse</title>
      <link>https://aunfl0w.github.io/2018/process-slaughterhouse/</link>
      <pubDate>Fri, 05 Oct 2018 18:55:05 -0400</pubDate>
      
      <guid>https://aunfl0w.github.io/2018/process-slaughterhouse/</guid>
      <description>Cattle not pets If you are running a stateless scale out application the cattle not pets mantra will be stuck in your thoughts. Sick processes and whole container environments that misbehave are taken out back of the server and executed. For the benefit of those handling on call support and for immediate recovery the easy button is great. However, it ignores the real problem. If you had a leaky roof the long term solution is not get more buckets to catch the water.</description>
    </item>
    
    <item>
      <title>Introducing Frozen Particle Waves</title>
      <link>https://aunfl0w.github.io/2018/start/</link>
      <pubDate>Sat, 01 Sep 2018 20:13:54 -0400</pubDate>
      
      <guid>https://aunfl0w.github.io/2018/start/</guid>
      <description>Frozen Particle Waves Frozen Particle Waves is a project I started to learn and demonstrate the use of a Spring Boot server app with an Angular client side UI. Currently it can be used to aggregate images from webcams that expose images through http endpoints and also supports basic auth. It uses Spring Boot as the application server to provide REST endpoints to the client side Angular UI. Spring security is used to secure the endpoints and handle user authn/authz.</description>
    </item>
    
  </channel>
</rss>