<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>2018 on Aun&#39;s Blog</title>
    <link>https://aunfl0w.github.io/archives/2018/</link>
    <description>Recent content in 2018 on Aun&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 16 Nov 2018 17:58:02 -0500</lastBuildDate><atom:link href="https://aunfl0w.github.io/archives/2018/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Functional Thinking</title>
      <link>https://aunfl0w.github.io/2018/functional/</link>
      <pubDate>Fri, 16 Nov 2018 17:58:02 -0500</pubDate>
      
      <guid>https://aunfl0w.github.io/2018/functional/</guid>
      <description>Functional Thinking For functional programming.
A Non Functional Aproach This is a sample program that processes a generated sample list of data. With the list of data it performs common operations such as find items, count types, sum things up etc. Do you see the duplicate code that is copy pasted with small changes? Can you tell what each loop is doing without thinking about what is going on in the loop or using the comments?</description>
    </item>
    
    <item>
      <title>Growing Frozen Particle Waves</title>
      <link>https://aunfl0w.github.io/2018/freedomtoadd/</link>
      <pubDate>Sun, 11 Nov 2018 12:04:41 -0500</pubDate>
      
      <guid>https://aunfl0w.github.io/2018/freedomtoadd/</guid>
      <description>Growing Frozen Particle Waves I recently added docker support to Frozen Particle Waves. If you are looking for an OSS project where you can contribute to this is a great option. It isn&amp;rsquo;t finished so you have a great base to contribute updates and exhibit your skills.
Some additions and updates that you can help with: Add a storage system and services to add users and cameras. Separate the UI into a more up to date framework such as Angular.</description>
    </item>
    
    <item>
      <title>Process Slaughterhouse</title>
      <link>https://aunfl0w.github.io/2018/process-slaughterhouse/</link>
      <pubDate>Fri, 05 Oct 2018 18:55:05 -0400</pubDate>
      
      <guid>https://aunfl0w.github.io/2018/process-slaughterhouse/</guid>
      <description>Cattle not pets If you are running a stateless scale out application the cattle not pets mantra will be stuck in your thoughts. Sick processes and whole container environments that misbehave are taken out back of the server and executed. For the benefit of those handling on call support and for immediate recovery the easy button is great. However, it ignores the real problem. If you had a leaky roof the long term solution is not get more buckets to catch the water.</description>
    </item>
    
    <item>
      <title>Not the view I was expecting</title>
      <link>https://aunfl0w.github.io/2018/not-the-view/</link>
      <pubDate>Sat, 08 Sep 2018 22:57:22 -0400</pubDate>
      
      <guid>https://aunfl0w.github.io/2018/not-the-view/</guid>
      <description>Not the view I was expecting It was a wonderful clear labor day on the river. The water was cool and flowing east just west of the Lake Wylie dam. A break from floating on a tube to climb a tree to a rope swing ends early with a fall. A gash to the calf and a splash in the water. In short time my daughter will be whisked away in an ambulance.</description>
    </item>
    
    <item>
      <title>Introducing Frozen Particle Waves</title>
      <link>https://aunfl0w.github.io/2018/start/</link>
      <pubDate>Sat, 01 Sep 2018 20:13:54 -0400</pubDate>
      
      <guid>https://aunfl0w.github.io/2018/start/</guid>
      <description>Frozen Particle Waves Frozen Particle Waves is a project I started to learn and demonstrate the use of a Spring Boot server app with an Angular client side UI. Currently it can be used to aggregate images from webcams that expose images through http endpoints and also supports basic auth. It uses Spring Boot as the application server to provide REST endpoints to the client side Angular UI. Spring security is used to secure the endpoints and handle user authn/authz.</description>
    </item>
    
    <item>
      <title>XOR NOT Security</title>
      <link>https://aunfl0w.github.io/2018/not-security/</link>
      <pubDate>Sat, 21 Jul 2018 20:13:49 -0400</pubDate>
      
      <guid>https://aunfl0w.github.io/2018/not-security/</guid>
      <description>We used xor to keep your secrets safe If you experience this situation it is time to look closer. While XOR will make a string that is eyeball safe it isn&amp;rsquo;t going to provide protection from even the casually interested. Weather this was chosen by the developers due to timeline pressures and added to the fix it later list or just an unfortunate set of google results you need to understand why simple XOR isn&amp;rsquo;t an option for security.</description>
    </item>
    
  </channel>
</rss>
